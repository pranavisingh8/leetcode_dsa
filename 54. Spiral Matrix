## 54. Spiral Matrix
class Solution {
 public:
  vector<int> spiralOrder(vector<vector<int>>& matrix) {
    if (matrix.empty())
      return {};
    const int m = matrix.size();
    const int n = matrix[0].size();
    vector<int> ans;
    int top = 0;
    int left = 0;
    int bottom = m - 1;
    int right = n - 1;

    while (ans.size() < m * n) {

      for (int j = left; j <= right && ans.size() < m * n; ++j)
        ans.push_back(matrix[top][j]);

      for (int i = top + 1; i <= bottom - 1 && ans.size() < m * n; ++i)
        ans.push_back(matrix[i][right]);

      for (int j = right; j >= left && ans.size() < m * n; --j)
        ans.push_back(matrix[bottom][j]);

      for (int i = bottom - 1; i >= top + 1 && ans.size() < m * n; --i)
        ans.push_back(matrix[i][left]);
      ++top, ++left, --bottom, --right;
    }
    return ans;
  }
};
